---
title: "EDS223-Homework4"
author: "Maddy Enda"
date: 11/30/2024
warning: false
message: false
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

## Assignment 4 Criteria:

-   In this assignment, we are seeking to identify which 'Exclusive Economic Zones' on the western coast of the United States would be best suited to aquaculture of oysters and mussels.

The criteria to be met by this assignemnt (reproducibles) are as follows: - arguments: minimum and maximum sea surface temperature minimum and maximum depth species name - outputs: map of EEZ regions colored by amount of suitable area species name should be included in the mapâ€™s title

First, I will start off by loading in our libraries and assigning the data to variables

### Running Libraries and Importing Data:

```{r, echo=FALSE, message=FALSE}
#running libraries
library(tidyverse)
library(dplyr)
library(terra)
library(tmap)
library(sf)
library(here)
library(stars)
library(patchwork)
library(kableExtra)
library(RColorBrewer)
library(calecopal)
```

```{r}
# Loading in raster data 
# Bathymetry data
depth <-rast(here("data", "depth.tif"))

# Sea Surface Temperature (SST) data
SST_2008 <-rast(here("data", "average_annual_sst_2008.tif"))
SST_2009 <-rast(here("data", "average_annual_sst_2009.tif"))
SST_2010 <-rast(here("data", "average_annual_sst_2010.tif"))
SST_2011 <-rast(here("data", "average_annual_sst_2011.tif"))
SST_2012 <-rast(here("data", "average_annual_sst_2012.tif"))

```

```{r}
# Loading in vector data with sf
# West Coast EEZ Regions
wc_regions <- sf::st_read(here::here("data", "wc_regions_clean.shp")) 

# West Coast Boundary
# Loading in the ejscreen data to create a base map
America <- sf::st_read(here::here( "data", "tl_2019_us_coastline", 
                                   "tl_2019_us_coastline.shp"))

```

```{r}
# Filter the America data to only the desired states
# Filtering the US basemap to be texas counties 
pacific_border <- America %>%
  filter(NAME == "Pacific")
```

### Aggregate and Convert the Sea Surface Temp Data:

I should check to see if the coordinate reference systems of all the yearly sea surface temperature datasets match

```{r}
# Checking the crs of all SST rasters to confirm they match

if (all(st_crs(SST_2008) == st_crs(SST_2009),
        st_crs(SST_2009) == st_crs(SST_2010),
        st_crs(SST_2010) == st_crs(SST_2011),
        st_crs(SST_2011) == st_crs(SST_2012))) {
  message( "All the SST rasters' crs match, yay!")
} else {
  warning("Updating coordinate reference systems to match")
}

```

Since they all match, we can combine them into a stack of SpatRasters

```{r}
# Combining all the raster data into stack
all_sst <- c(SST_2008,
              SST_2009,
              SST_2010,
              SST_2011,
              SST_2012)

names(all_sst) <- c("2008",
                     "2009",
                     "2010",
                    "2011",
                    "2012")
```

```{r}
# Checking to see if the stacking worked by viewing all_sst
all_sst
```

Next, we take the mean of all SST, and convert the temperature in Kelvin to be in Celsius.

```{r}
# Creating a SpatRaster object that is just the mean sst for all years
average_sst <- mean(all_sst, na.rm = TRUE)

# Convert Kelvin to Celsius  
average_sst_C <- average_sst - 273.15
```

```{r}
# Check the min and max values of the average_sst_C to see if the values are now in Celsius
average_sst_C
```

A quick plot of this data helps to visualize where our final sites may be, and to compare to our joined raster later to make sure our area has decreased after joining.

```{r}
# Plotting the original sst data
  tm_shape(average_sst_C) +
  tm_raster()
```

### Resample the depth data, and make sure both depth and SST match:

```{r}
# Match the crs of the data to crop
crs(depth) <-crs(average_sst_C)
pacific_border <- st_transform(pacific_border, crs= crs(average_sst_C))

# Re-sampling the depth data to match the resolution of the SST data, using the nearest neighbor approach
depth_resampled <- resample(depth, average_sst_C, method="near")

# Cropping the extent of the depth and pacific borders data to match the average_sst_C
depth_crop <- terra::crop(depth_resampled, ext(average_sst_C))

# Creating the bbox for the extent of the sst data
bbox= st_bbox(c(xmin = -131.98475233, xmax = -114.986717027556, ymin = 29.9930522526667, ymax = 49.988422964 ), crs = average_sst_C) 

# Using the bbox from above to change crop the pacific_border data
pacific_extent <- st_as_sfc(bbox) %>%
  st_transform(st_crs(average_sst_C))


pacific_crop<- st_crop(pacific_border, pacific_extent)
```

```{r}
# Check to see if the extent, crs, and resolution all match for the depth and sst data
print(res(depth_crop) == res(average_sst_C))

print(crs(depth_crop) == crs(average_sst_C))

print(ext(depth_crop) == ext(average_sst_C))
```

### Reclassify the SST and depth to our desired criteria for oyster growth:

```{r}
# Reclassify the depth data to be either 0 or 1 for suitable locations (-70:0)
# create reclassification matrix
rcl_depth <- matrix(c(-Inf, -70, NA,
                      -70, 0, 1,
                      0, Inf, NA),
                ncol = 3, byrow = TRUE)

# Reclassifying depth based on our depth_rcl matrix
depth_rc <- classify(depth_crop, rcl = rcl_depth)

```

```{r}
# Plotting the original depth data
tm_shape(pacific_crop) +
  tm_lines(col= "blue")+
  tm_shape(depth_rc) +
  tm_raster()
```

```{r}
# Reclassifying the SST data to be either 0 or 1 for suitable locations (11:30)
rcl_sst <- matrix(c(-Inf, 11, NA,
                      11, 30, 1,
                    30, Inf, NA),
                ncol = 3, byrow = TRUE)

# Reclassifying depth based on our depth_rcl matrix
sst_rc <- classify(average_sst_C, rcl = rcl_sst)

```

### Finding possible sites for oyster aquaculture:

```{r}
# Multiplying the sst and depth together to get a single SpatRaster
sites_fun <- function(x,y) {
  return(x * y)
}

possible_sites <- lapp(c(depth_rc, sst_rc), fun= sites_fun)
```

```{r}
# Plotting the possible sites for oyster aquaculture data 
tm_shape(pacific_crop) +
  tm_lines(col= "blue")+
  tm_shape(possible_sites)+
  tm_raster()
```

### Find Possible Aquaculture Area within the EEZ boundaries:

```{r}
# Make the wc_regions crs match the possible sites 
wc_regions <- st_transform(wc_regions, crs= crs(possible_sites))

# Mask location raster to EEZ locations
eez_sites_mask <- mask(possible_sites, wc_regions)

# Find the area of grid cells using cellSize
aquaculture_area <- cellSize(x = eez_sites_mask, 
                 mask = TRUE, 
                 unit = 'km')
```

Let's use a color palette from Calecopal, that takes sample colors from images taken around the west coast to make color palettes!

```{r}
# Loading in a color palette with calecopal
color_palette <- cal_palette("sierra1")
```


```{r}
# Mapping the wc_regions with the possible eez sites overlayed to get an idea of how large the areas should be
tm_shape(wc_regions)+
  tm_polygons(col = "rgn",
              title= "Region",
              palette= color_palette)+
  tm_shape(possible_sites) +
  tm_raster(palette = c("aquamarine3", "aquamarine3"),
            title= "Possible Sites") +
   tm_layout( outer.bg.color= "aquamarine4",
              bg.color= "beige",
            legend.outside = TRUE,
            main.title = ("Area within each West Coast Region \nfor Aquaculture of Oysters"),
            main.title.color = "white",
            main.title.size = 1.0,
            main.title.fontface = "bold",
            main.title.fontfamily = "Courier",
            legend.title.color = "white",
            legend.title.fontface = "bold",
            legend.title.fontfamily = "Courier",
            legend.text.color = "white",
            legend.text.fontface = "bold",
            legend.text.fontfamily = "Courier",
            compass.type = "rose") +
  tm_compass(position = c(0.025, 0.1),
             size = 1.7,
             text.color = "burlywood4",
             color.dark = "burlywood4") +
  tm_scale_bar(position = c(0.08, 0.02),
               width = 10,
               color.dark = "burlywood4")
```

### Find Possible Aquaculture Area for Each EEZ boundary:

```{r}
# Find the suitable area within each EEZ by rasterizing the data
wc_regions_rast <- rasterize(wc_regions,
                        aquaculture_area, 
                        field = 'rgn') 

# Use group by each zone in the west coast EEZ
suitable_4_aquaculture <- zonal(x = aquaculture_area, 
                      z = wc_regions_rast, 
                      fun = 'sum', 
                      na.rm = TRUE)
```

```{r, warning= FALSE}
# Getting the values area available for aquaculture of oysters in each West Coast zone
# Print out the area associated with each zone (code initially created, and help given to recreate, by Michelle Yiv)
print(paste0("Area suitable for Oysters Aquaculture in the ", suitable_4_aquaculture$rgn[1], " Region is ", round(suitable_4_aquaculture$area[1], digits = 2), 'km^2'))
print(paste0("Area suitable for Oysters Aquaculture in the ", suitable_4_aquaculture$rgn[2], " Region is ", round(suitable_4_aquaculture$area[2], digits = 2), 'km^2'))
print(paste0("Area suitable for Oysters Aquaculture in the ", suitable_4_aquaculture$rgn[3], " Region is ", round(suitable_4_aquaculture$area[3], digits = 2), 'km^2'))
print(paste0("Area suitable for Oysters Aquaculture in the ", suitable_4_aquaculture$rgn[4], " Region is ", round(suitable_4_aquaculture$area[4], digits = 2), 'km^2'))
print(paste0("Area suitable for Oysters Aquaculture in the ", suitable_4_aquaculture$rgn[5], " Region is ", round(suitable_4_aquaculture$area[5], digits = 2), 'km^2'))
```

### Generalized Workflow for All Species:

Now we need to create our final function, that we could put any species into and find the possible area along the West Coast of the US that could be used for aquaculture.

```{r}
# Create our overall function
possible_aquaculture_area <- function(min_sst, max_sst, min_depth, max_depth, species) {
 # Reclassify the data:   
      # Create reclassification matrix for depth
      species_depth_rcl <- matrix(c(-Inf, min_depth, NA, 
                                 min_depth, max_depth, 1, 
                                 max_depth, Inf, NA), 
                                 ncol = 3, byrow = TRUE)
       # Depth reclassification
        species_depth_rc <- classify(depth_crop, rcl = species_depth_rcl) 
      
       # Create reclassification matrix for SST
      species_SST_rcl <- matrix(c(-Inf, min_sst, NA, 
                                min_sst, max_sst, 1, 
                                max_sst, Inf, NA), 
                                ncol = 3, byrow = TRUE)
      # SST reclassification
        species_SST_rc <- classify(average_sst_C, rcl = species_SST_rcl) 
        
        
# Find the possible sites for aquaculture:
        # Use lapp() to find possible areas for aquaculture
      species_sites <- lapp(c(species_depth_rc, species_SST_rc),
                  fun = function(x,y){return(x*y)})
      
      # Mask location raster to EEZ zones
      species_sites_mask <- mask(species_sites, wc_regions)
      
      # Find the grid area applicable for this species
      species_aquaculture_area <- cellSize(x = species_sites_mask, 
                     mask = TRUE, 
                     unit = 'km') 
      
       # Rasterize the EEZ data
      eez_species_rast <- rasterize(wc_regions,
                            species_aquaculture_area, 
                            field = 'rgn')
      
      # Use 'zonal algebra' to group the data together by west coast region
      eez_species_areas <- zonal(x = species_aquaculture_area, 
                          z = eez_species_rast,
                          fun = 'sum',
                          na.rm = TRUE)
      
# Print out the results:      
      # Print out the possible area for aquaculture of this species for each of the west coast zones:
      print(paste0("Suitable Area in ", eez_species_areas$rgn[1],
                   " for the ", species," Region is ",
                   round(eez_species_areas$area[1], digits = 2),
                   'km^2'))
      
      print(paste0("Suitable Area in ",
                   eez_species_areas$rgn[2],
                   " for the ", species, " Region is ",
                   round(eez_species_areas$area[2], digits = 2), 'km^2'))
      
      print(paste0("Suitable Area in ", eez_species_areas$rgn[3], 
                   " for the ", species, " Region is ",
                   round(eez_species_areas$area[3], digits = 2), 'km^2'))
      
      print(paste0("Suitable Area in ", eez_species_areas$rgn[4],
                   " for the ", species, " Region is ", 
                   round(eez_species_areas$area[4], digits = 2), 'km^2'))
      
      print(paste0("Suitable Area in ", eez_species_areas$rgn[5], 
                   " for the ", species," Region is ",
                   round(eez_species_areas$area[5], digits = 2), 'km^2'))

# Map the potential area for aquaculture of this particular species    
tm_shape(eez_species_rast)+
  tm_raster(col = "rgn",
              title= "West Coast Region",
              palette= color_palette)+
  tm_shape(species_sites) +
  tm_raster(palette = c("aquamarine3", "aquamarine3"),
            title= paste0("Total Area for ", species,  " Aquaculture")) +
   tm_layout( outer.bg.color= "aquamarine4",
              bg.color= "beige",
            legend.outside = TRUE,
            main.title = (paste0("Total Area (km^2) for\n ", species,  " Aquaculture")),
            main.title.color = "white",
            main.title.size = 1.0,
            main.title.fontface = "bold",
            main.title.fontfamily = "Courier",
            legend.title.color = "white",
            legend.title.fontface = "bold",
            legend.title.fontfamily = "Courier",
            legend.text.color = "white",
            legend.text.fontface = "bold",
            legend.text.fontfamily = "Courier",
            compass.type = "rose") +
  tm_compass(position = c(0.025, 0.1),
             size = 1.7,
             text.color = "burlywood4",
             color.dark = "burlywood4") +
  tm_scale_bar(position = c(0.08, 0.02),
               width = 10,
               color.dark = "burlywood4")
      }
```

```{r}
# Test function on oyster to confirm function 

possible_aquaculture_area(min_sst = 11, max_sst = 30,
                   min_depth = -70, max_depth = 0, 
                   species = "Oyster")
```

```{r}
# Find the possible aquaculture sites on the west coast for California Mussels
possible_aquaculture_area(min_sst = 8.6, max_sst = 14.3,
                   min_depth = -30, max_depth = 0, 
                   species = "California Mussels")
```
